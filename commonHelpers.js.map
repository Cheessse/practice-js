{"version":3,"file":"commonHelpers.js","sources":["../src/js/ls-helpers.js","../src/js/constants.js","../src/js/refs.js","../src/js/remove-elements.js","../src/main.js"],"sourcesContent":["export function setLocalStorage(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport function getLocalStorage(key) {\n  return JSON.parse(localStorage.getItem(key));\n}\n","export const TASK_KEY = 'taskKey';\n","export default {\n  form: document.querySelector('#task-form'),\n  list: document.querySelector('.task-list'),\n};\n","import { getLocalStorage, setLocalStorage } from './ls-helpers';\nimport { TASK_KEY } from './constants';\n\nimport refs from './refs.js';\nconst { list } = refs;\n\nlist.addEventListener('click', onDeleteElement);\n\nfunction onDeleteElement(e) {\n  if (e.target.nodeName !== 'BUTTON') return;\n\n  const keysArray = getLocalStorage(TASK_KEY);\n  const newArray = keysArray.filter(elem => e.target.parentNode.id !== elem.id);\n  setLocalStorage(TASK_KEY, newArray);\n\n  e.target.parentNode.remove();\n}\n","import { setLocalStorage, getLocalStorage } from './js/ls-helpers.js';\nimport './js/remove-elements.js';\nimport refs from './js/refs.js';\nimport { TASK_KEY } from './js/constants.js';\n\nimport { nanoid } from 'nanoid';\n\nconst { form, list } = refs;\n\nform.addEventListener('submit', onFormSubmit);\n\nrenderTasks();\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const inputValue = e.target.elements.taskName.value.trim();\n  if (inputValue === '') return;\n\n  const id = nanoid();\n\n  addTaskSubmit(inputValue, id);\n\n  savetoLS(inputValue, id);\n\n  e.target.reset();\n}\n\nfunction addTaskSubmit(inputValue, id) {\n  const elementLi = `<li id='${id}'>${inputValue} <button type='button'>X</button></li>`;\n  list.insertAdjacentHTML('beforeend', elementLi);\n}\n\nfunction savetoLS(inputValue, id) {\n  const arr = getLocalStorage(TASK_KEY) || [];\n\n  arr.push({\n    text: inputValue,\n    id,\n  });\n\n  setLocalStorage(TASK_KEY, arr);\n}\n\nfunction renderTasks() {\n  const localValue = getLocalStorage(TASK_KEY);\n  if (!localValue) return;\n  const arrays = localValue\n    .map(\n      el => `<li id='${el.id}'>${el.text} <button type='button'>X</button></li>`\n    )\n    .join('');\n  list.insertAdjacentHTML('beforeend', arrays);\n}\n"],"names":["setLocalStorage","key","value","getLocalStorage","TASK_KEY","refs","list","onDeleteElement","newArray","elem","form","onFormSubmit","renderTasks","inputValue","id","nanoid","addTaskSubmit","savetoLS","elementLi","arr","localValue","arrays","el"],"mappings":"svBAAO,SAASA,EAAgBC,EAAKC,EAAO,CAC1C,aAAa,QAAQD,EAAK,KAAK,UAAUC,CAAK,CAAC,CACjD,CAEO,SAASC,EAAgBF,EAAK,CACnC,OAAO,KAAK,MAAM,aAAa,QAAQA,CAAG,CAAC,CAC7C,CCNO,MAAMG,EAAW,UCATC,EAAA,CACb,KAAM,SAAS,cAAc,YAAY,EACzC,KAAM,SAAS,cAAc,YAAY,CAC3C,ECCM,CAAEC,KAAAA,CAAM,EAAGD,EAEjBC,EAAK,iBAAiB,QAASC,CAAe,EAE9C,SAASA,EAAgB,EAAG,CAC1B,GAAI,EAAE,OAAO,WAAa,SAAU,OAGpC,MAAMC,EADYL,EAAgBC,CAAQ,EACf,OAAOK,GAAQ,EAAE,OAAO,WAAW,KAAOA,EAAK,EAAE,EAC5ET,EAAgBI,EAAUI,CAAQ,EAElC,EAAE,OAAO,WAAW,QACtB,CCTA,KAAM,CAAE,KAAAE,EAAM,KAAAJ,CAAM,EAAGD,EAEvBK,EAAK,iBAAiB,SAAUC,CAAY,EAE5CC,IAEA,SAASD,EAAa,EAAG,CACvB,EAAE,eAAc,EAChB,MAAME,EAAa,EAAE,OAAO,SAAS,SAAS,MAAM,OACpD,GAAIA,IAAe,GAAI,OAEvB,MAAMC,EAAKC,IAEXC,EAAcH,EAAYC,CAAE,EAE5BG,EAASJ,EAAYC,CAAE,EAEvB,EAAE,OAAO,OACX,CAEA,SAASE,EAAcH,EAAYC,EAAI,CACrC,MAAMI,EAAY,WAAWJ,CAAE,KAAKD,CAAU,yCAC9CP,EAAK,mBAAmB,YAAaY,CAAS,CAChD,CAEA,SAASD,EAASJ,EAAYC,EAAI,CAChC,MAAMK,EAAMhB,EAAgBC,CAAQ,GAAK,CAAA,EAEzCe,EAAI,KAAK,CACP,KAAMN,EACN,GAAAC,CACJ,CAAG,EAEDd,EAAgBI,EAAUe,CAAG,CAC/B,CAEA,SAASP,GAAc,CACrB,MAAMQ,EAAajB,EAAgBC,CAAQ,EAC3C,GAAI,CAACgB,EAAY,OACjB,MAAMC,EAASD,EACZ,IACCE,GAAM,WAAWA,EAAG,EAAE,KAAKA,EAAG,IAAI,wCACnC,EACA,KAAK,EAAE,EACVhB,EAAK,mBAAmB,YAAae,CAAM,CAC7C"}